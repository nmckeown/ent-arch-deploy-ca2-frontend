name: CI

env:
  DOCKER_REPO: 'frontend'

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# workflow jobs
jobs:
  # code analysis for bugs, code smells and vulns
  scan_code:
    name: Static Code Analysis
    if: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
            fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
    
      - name: Install dependencies
        run: npm ci
    
      #- name: Build project
      #  run: npm run build

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=nmckeown
            -Dsonar.projectKey=nmckeown_ent-arch-deploy-ca2-frontend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 

  # scans code depenencies for security vulns
  owasp_dependency_check:
    name: OWASP Depenency Check
    if: true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'Frontend'
          path: '.'
          format: 'HTML'    
          args: >
            --failOnCVSS 20          
          # fail if CVSS score (CVE scoring system) is High >=20
          
      - name: Upload Test results
        uses: actions/upload-artifact@v4
        with:
          name: Depcheck report
          path: ${{ github.workspace }}/reports

  build_image:
    name: Build Docker Image
    # ubuntu runner
    runs-on: ubuntu-latest

    # job steps
    steps:      
      # Checks-out your repository
      - uses: actions/checkout@v4

      # login to docker hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # build using local dockerfile, tag unique hash and latest
      - name: Build Docker image with Git SHA tag
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest

      # push to docker hub
      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPO }}:latest
